<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>